(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{321:function(t,s,a){t.exports=a.p+"assets/img/prototype_001.fa0bcc03.png"},322:function(t,s,a){t.exports=a.p+"assets/img/prototype_002.9a564060.png"},323:function(t,s,a){t.exports=a.p+"assets/img/prototype_003.bda480b6.png"},419:function(t,s,a){"use strict";a.r(s);var n=a(3),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"프로토타입-prototype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#프로토타입-prototype"}},[t._v("#")]),t._v(" 프로토타입 (Prototype)")]),t._v(" "),s("p",[t._v("자바스크립트는 "),s("strong",[s("code",[t._v("프로토타입 기반 언어(prototype-based language)")])]),t._v(" 입니다. 프로토타입 기반 언어에서는 어떤 객체를 원형("),s("strong",[s("code",[t._v("prototype")])]),t._v(")으로 삼고 이를 참조함으로써 상속과 비슷한 효과를 얻습니다. 자바스크립트의 프로토타입을 이해하기 위해서는 "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 속성을 우선 이해해야 합니다. 간단한 예제로 시작해보겠습니다.")]),t._v(" "),s("h2",{attrs:{id:"프로토타입-개념-이해"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#프로토타입-개념-이해"}},[t._v("#")]),t._v(" 프로토타입 개념 이해")]),t._v(" "),s("p",[t._v("브라우저의 개발자 도구에서 간단한 Array를 정의한 후 출력해보면 다음 화면과 같이 나옵니다.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(321),alt:"simpleArray 출력 결과"}})]),t._v(" "),s("p",[t._v("출력된 결과를 보면 forEach, map, push와 같은 익숙한 함수들이 보입니다. 우리는 해당 함수를 정의하지 않았는데 그럼 어디에 함수들이 정의되어 있고, 어떻게 함수들을 쓸 수 있는 걸까요?")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("__proto__를 읽을 때는 'dunder proto'('던더 프로토')라고 읽으면 됩니다.\ndunder는 'double underscore'의 줄임말.")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("__proto__ 와 [[Prototype]]"),s("br"),t._v("\n자바스크립트 명세에는 __proto__가 아닌 [[Prototype]]으로 정의되어 있으며,\n__proto__ 속성은 단지 브라우저에서 [[Prototype]]을 구현한 대상이며 권장되는 방식이 아닙니다. 권장되는 방식은 하단의 참고 링크를 확인해주세요. 최신 브라우저 개발자 도구에서는 __proto__가 아닌 [[Prototype]]으로 표현될 수 있습니다. 본 문서에서는 이해하기 쉽게 하기 위하여 설명과 사진에 __proto__ 속성을 사용하였습니다.")]),t._v(" "),s("p",[t._v("참고 : "),s("a",{attrs:{href:"https://ko.javascript.info/prototype-inheritance",target:"_blank",rel:"noopener noreferrer"}},[t._v("\"프로토타입 상속\" 문서 '__proto__는 [[Prototype]]용 getter·setter입니다.' 부분"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"prototype-속성과-proto-속성"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prototype-속성과-proto-속성"}},[t._v("#")]),t._v(" prototype 속성과 "),s("strong",[t._v("__proto__")]),t._v(" 속성")]),t._v(" "),s("p",[t._v("바로 위 예제에서 사용한 예제를 다르게 표현하면 다음의 new 키워드를 사용하는 문장과 동일합니다.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var simpleArray = [];")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" simpleArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("위 문장을 실행하면 일어나는 일을 순서대로 설명하면")]),t._v(" "),s("ol",[s("li",[t._v("생성자 함수 Array를 new 키워드와 함께 호출하면")]),t._v(" "),s("li",[t._v("생성자 함수 Array에 정의된 내용을 바탕으로 새로운 인스턴스 simpleArray가 생성됩니다.")]),t._v(" "),s("li",[t._v("이때 생성된 인스턴스인 simpleArray에는 "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 라는 속성이 자동으로 부여되는데")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("__proto__")])]),t._v(" 속성은 생성자 함수 Array의 "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 속성을 참조합니다.")])]),t._v(" "),s("p",[t._v("개발자 도구에서 다시 Array.prototype 을 출력해보면, 위에서 출력한 simpleArray의 "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 속성의 내용과 동일한 것을 알 수 있습니다.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(322),alt:"Array.prototype 출력 결과"}})]),t._v(" "),s("p",[t._v("즉, 우리가 맨 처음 예제에서 봤던 forEach, map, push와 같은 함수들은 Array.prototype에 정의되어 있고, simpleArray 인스턴스의 "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 속성에서 참조하고 있던 것입니다.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" simpleArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),s("p",[t._v("위 예제에서 알아본 "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 와 "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 속성의 관계가 바로 자바스크립트 프로토타입 개념의 핵심입니다. "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 의 타입은 "),s("strong",[t._v("객체")]),t._v("이고, "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 을 "),s("strong",[t._v("참조")]),t._v("하는 "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 또한 "),s("strong",[t._v("객체")]),t._v("입니다. "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 내부에는 "),s("strong",[t._v("인스턴스가 사용할 메서드와 속성을 저장")]),t._v("합니다. 그럼 인스턴스에서 자동으로 생성한 "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 속성을 통해 "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 내부에 정의된 메서드와 속성을 사용할 수 있습니다.")]),t._v(" "),s("h3",{attrs:{id:"prototype-속성-사용-예제"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prototype-속성-사용-예제"}},[t._v("#")]),t._v(" prototype 속성 사용 예제")]),t._v(" "),s("p",[t._v("다음으로 "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 속성을 직접 사용하는 예제를 통해 "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 속성을 더 이해해 보겠습니다")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 모든 함수는 prototype 속성을 자동으로 가지고 있음")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("printName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("위 코드를 보면 Person이라는 생성자 함수의 "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 에 "),s("code",[t._v("printName")]),t._v(" 이라는 메서드를 지정하였습니다. 그럼 "),s("code",[t._v("Person")]),t._v("의 인스턴스는 "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 속성을 통해 "),s("code",[t._v("printName")]),t._v(" 함수를 호출할 수 있습니다.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ironMan "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Tony Stark"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nironMan"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])]),s("p",[t._v("예제 코드를 보면 우리가 설정한 이름인 "),s("code",[t._v("'Tony Stark'")]),t._v("가 아닌 "),s("code",[t._v("undefined")]),t._v("를 출력합니다. 메서드를 출력할 때는 메서드 바로 앞의 객체가 this가 되는데, "),s("code",[t._v("ironMan.__proto__")]),t._v("에는 name이라는 속성이 존재하지 않아 "),s("code",[t._v("undefined")]),t._v("가 출력된 것입니다.")]),t._v(" "),s("p",[t._v("그럼 우리가 설정한 이름을 출력하려면 어떻게 해야 할까요? 원하는 결과를 얻기 위해 this를 "),s("code",[t._v("ironMan")]),t._v(" 인스턴스로 설정하는 방법은 "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 없이 인스턴스에서 바로 "),s("code",[t._v("printName")]),t._v(" 메서드를 사용하는 것입니다.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ironMan "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Tony Stark"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nironMan"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Tony Stark")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" captainAmerica "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Steve Rogers"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncaptainAmerica"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Steve Rogers")]),t._v("\n")])])]),s("p",[t._v("위와 같이 실행할 수 있는 이유는 "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 속성이 "),s("strong",[t._v("생략 가능한 속성")]),t._v(" 이기 때문입니다. "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 속성을 생략할 수 있기 때문에 생성자 함수의 "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 에 어떤 메서드나 속성이 존재한다면 "),s("strong",[t._v("인스턴스에서도 자신의 것처럼 해당 메서드나 속성을 접근")]),t._v(" 할 수 있습니다.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("captainAmerica"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("captainAmerica")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" captainAmerica"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"프로토타입-개념-정리"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#프로토타입-개념-정리"}},[t._v("#")]),t._v(" 프로토타입 개념 정리")]),t._v(" "),s("p",[t._v("정리하면, 자바스크립트는 함수에 자동으로 "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 이라는 객체 타입의 속성을 생성합니다. new 연산자와 함께 함수를 호출하여 함수를 생성자 함수로써 사용할 경우, 생성된 인스턴스에는 숨겨진 속성인 "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 속성이 자동으로 생성됩니다. 그리고 "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 속성은 생성자 함수의 "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 속성을 "),s("strong",[t._v("참조")]),t._v(" 합니다. "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 속성은 "),s("strong",[t._v("생략이 가능")]),t._v(" 하기 때문에 인스턴스에서 생성자 함수의 "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 에 정의된 메서드나 속성에 "),s("strong",[t._v("접근")]),t._v(" 할 수 있습니다.")]),t._v(" "),s("h2",{attrs:{id:"프로토타입-체인"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#프로토타입-체인"}},[t._v("#")]),t._v(" 프로토타입 체인")]),t._v(" "),s("h3",{attrs:{id:"메서드-오버라이드"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#메서드-오버라이드"}},[t._v("#")]),t._v(" 메서드 오버라이드")]),t._v(" "),s("p",[t._v("인스턴스에서 생성자 함수의 "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 속성을 참조하는 "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 를 생략하면, 인스턴스는 "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 에 정의된 속성이나 메서드를 자신의 것처럼 사용할 수 있다고 설명하였습니다. 그럼 만약 인스턴스에서 동일한 이름의 속성이나 메서드를 가지고 있다면 어떨까요?")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("printName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ironMan "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Tony Stark"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//printName 메서드 오버라이드")]),t._v("\nironMan"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("printName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("I am ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nironMan"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// I am Tony Stark")]),t._v("\n")])])]),s("p",[t._v("위 예제는 위에서 사용 예제에서 "),s("code",[t._v("ironMan")]),t._v(" 인스턴스에 "),s("code",[t._v("printName")]),t._v(" 메서드를 다시 정의한 예제입니다. 실행 결과를 보면, "),s("code",[t._v("ironMan.__proto__.printName")]),t._v("이 아닌, "),s("code",[t._v("ironMan")]),t._v(" 객체에 있는 "),s("code",[t._v("printName")]),t._v(" 메서드가 호출되었습니다.")]),t._v(" "),s("p",[t._v("이와 같은 현상을 "),s("strong",[s("code",[t._v("'메서드 오버라이드(method override)'")])]),t._v(" 라고 합니다. "),s("strong",[t._v("메서드 위에 메서드를 덮어씌웠다")]),t._v(" 는 표현으로, 원본을 제거하고 다른 대상으로 교체한 것이 아닌 "),s("strong",[t._v("원본 그대로 있는 상태에서 다른 대상을 위에 얹는")]),t._v(" 개념입니다. 자바스크립트 엔진이 "),s("code",[t._v("printName")]),t._v("이라는 메서드를 찾는 방식은 먼저 실행 컨텍스트의 속성들을 검색하고, 존재하지 않는다면 "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 를 순차적으로 검색하는 순서로 진행하기 때문에 "),s("code",[t._v("ironMan")]),t._v(" 객체에 있는 "),s("code",[t._v("printName")]),t._v(" 메서드가 호출되었습니다.")]),t._v(" "),s("h3",{attrs:{id:"프로토타입-체이닝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#프로토타입-체이닝"}},[t._v("#")]),t._v(" 프로토타입 체이닝")]),t._v(" "),s("p",[t._v("메서드 오버라이드에 대해 알아보았으니 맨 처음으로 돌아가 Array를 사용하는 예제를 다시 보겠습니다.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" simpleArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[1, 2]")]),t._v("\nsimpleArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[1, 2, 3]")]),t._v("\nsimpleArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[s("code",[t._v("simpleArray")]),t._v(" 인스턴스에 push 함수와 hasOwnProperty 함수를 정의하지 않았지만, 위와 같이 사용할 수 있는 이유는 자바스크립트 엔진이 메서드를 찾는 방식이 먼저 자신의 속성을 검색하고, 존재하지 않는다면 그다음으로 가까운 대상인 "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 를 검색하는 순서로 진행하기 때문입니다. 위 예제에서 "),s("code",[t._v("console.dir(simpleArray);")]),t._v(" 명령을 실행해보면, push 함수와 hasOwnProperty 함수가 어디에 정의되어 있는지 확인 할 수 있습니다.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(323),alt:"console.dir(simpleArray)의 결과"}})]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simpleArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// simpleArray.__proto__ === Array.prototype // true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simpleArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// simpleArray.__proto__.__proto__ === Object.prototype // true")]),t._v("\n")])])]),s("p",[t._v("우리가 사용했던 함수들은 사실 위와 같이 "),s("code",[t._v("Array.prototype")]),t._v("에 정의된 push 함수와 "),s("code",[t._v("Object.prototype")]),t._v("에 정의된 hasOwnProperty 함수를 호출한 것입니다.")]),t._v(" "),s("p",[t._v("어떤 데이터의 "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 속성 내부에 다시 "),s("strong",[s("code",[t._v("__proto__")])]),t._v(" 속성이 연쇄적으로 이어진 것을 "),s("strong",[s("code",[t._v("'프로토타입 체인(prototype chain)'")])]),t._v(" 이라 하고, 이 체인을 계속 따라가며 검색하는 것을 "),s("strong",[s("code",[t._v("'프로토타입 체이닝(prototype chaining)'")])]),t._v(" 이라고 합니다.")]),t._v(" "),s("p",[t._v("그리고 위에서 설명한 push 함수와 hasOwnProperty 함수를 "),s("strong",[s("code",[t._v("'자바스크립트 내장함수'")])]),t._v(" 라고 합니다. 자바스크립트 내장함수는 Array와 Object와 같은 "),s("strong",[s("code",[t._v("'자바스크립트 표준 내장 객체'")])]),t._v(" 의 "),s("strong",[s("code",[t._v("prototype")])]),t._v(" 에 정의되어 있는 함수입니다. 자세한 사항은 "),s("a",{attrs:{href:"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN 표준 내장 객체"),s("OutboundLink")],1),t._v(" 문서에 나온 객체 문서의 '인스턴스'나 '프로토타입' 부분을 참고해주세요.")])])}),[],!1,null,null,null);s.default=r.exports}}]);