(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{423:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"문자열-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#문자열-string"}},[t._v("#")]),t._v(" 문자열(String)")]),t._v(" "),s("p",[t._v("문자열은 변수의 여러 타입 중 하나입니다. 일반적으로 스트링이라고도 부르며 아래와 같이 선언합니다.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("위 코드는 "),s("code",[t._v("a")]),t._v("라는 변수에 "),s("code",[t._v("hello")]),t._v("라는 문자열을 할당한 코드입니다. 문자열은 이와 같이 작은 따옴표(') 또는 큰 따옴표(\")를 이용하여 정의할 수 있습니다.")]),t._v(" "),s("h2",{attrs:{id:"숫자와의-구분"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#숫자와의-구분"}},[t._v("#")]),t._v(" 숫자와의 구분")]),t._v(" "),s("p",[t._v("자바스크립트는 코드를 실행하는 시점에 변수의 타입을 결정하는 언어입니다. 이러한 특징이 초심자들에게는 편하지만 아래와 같이 타입을 헷갈리게 하는 경우가 생깁니다.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n")])])]),s("p",[t._v("위 코드에서 변수 "),s("code",[t._v("a")]),t._v("는 숫자고 변수 "),s("code",[t._v("b")]),t._v("는 문자열입니다. 콘솔 로그 코드를 이용하여 콘솔에 변수의 값을 출력해보면 육안으로는 구분하기가 어렵다는 사실을 알 수 있습니다.")]),t._v(" "),s("p",[t._v("여기서 "),s("code",[t._v("typeof")]),t._v("를 이용하여 변수의 타입을 확인할 수도 있겠지만 실무 관점에서는 아래와 같은 방법으로 구분할 수 있습니다.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])]),s("p",[t._v("여기서 "),s("code",[t._v("length")]),t._v(" 라는 예약어는 자바스크립트에서 변수의 타입에 따라 제공하는 기능입니다. length는 문자열, 배열의 길이를 숫자 형태로 확인할 수 있습니다. 따라서 "),s("code",[t._v("b")]),t._v("는 문자열이고 "),s("code",[t._v("a")]),t._v("는 숫자임을 추측할 수가 있습니다.")]),t._v(" "),s("p",[t._v("위와 같이 타입에 따라 기본적으로 제공되는 예약어 및 기능들을 자바스크립트 내장 함수(JavaScript Built-in API / JavaScript Native API)라고 합니다. 내장 함수에 대해서는 "),s("RouterLink",{attrs:{to:"/js/prototype.html"}},[t._v("prototype")]),t._v("에서 자세히 설명하겠습니다.")],1)])}),[],!1,null,null,null);s.default=e.exports}}]);